{"version":3,"sources":["utils/token.js"],"names":[],"mappings":";;;;;QAQgB,wB,GAAA,wB;QAIA,e,GAAA,e;QAOA,a,GAAA,a;QAIA,yB,GAAA,yB;QAMA,uB,GAAA,uB;QAIA,0B,GAAA,0B;QAOA,wB,GAAA,wB;QAUA,U,GAAA,U;;AA9ChB;;;;AACA;;;;;;AAGO,SAAS,wBAAT,CAAkC,OAAlC,EAA2C;AAC9C,WAAO,uBAAI,IAAJ,CAAS,OAAT,EAAkB,iBAAO,KAAzB,CAAP;AACH,C,CAVD;;;;AAYO,SAAS,eAAT,CAAyB,EAAzB,EAA6B;AAChC,QAAM,MAAM,KAAK,GAAL,EAAZ;AACA,QAAM,MAAM,MAAM,KAAK,EAAL,GAAU,EAAV,GAAe,EAAf,GAAoB,IAAtC;AACA,QAAM,QAAQ,SAAd;AACA,WAAO,EAAC,QAAD,EAAM,QAAN,EAAW,MAAX,EAAe,YAAf,EAAP;AACH;;AAEM,SAAS,aAAT,CAAuB,EAAvB,EAA2B;AAC9B,WAAO,yBAAyB,gBAAgB,EAAhB,CAAzB,CAAP;AACH;;AAEM,SAAS,yBAAT,CAAmC,EAAnC,EAAuC;AAC1C,QAAM,MAAM,KAAK,GAAL,EAAZ;AACA,QAAM,QAAQ,aAAd;AACA,WAAO,EAAC,QAAD,EAAM,MAAN,EAAU,YAAV,EAAP;AACH;;AAEM,SAAS,uBAAT,CAAiC,EAAjC,EAAqC;AACxC,WAAO,yBAAyB,0BAA0B,EAA1B,CAAzB,CAAP;AACH;;AAEM,SAAS,0BAAT,CAAoC,EAApC,EAAwC;AAC3C,QAAM,MAAM,KAAK,GAAL,EAAZ;AACA,QAAM,MAAM,MAAM,KAAK,EAAL,GAAU,EAAV,GAAe,IAAjC;AACA,QAAM,QAAQ,KAAd;AACA,WAAO,EAAC,QAAD,EAAM,QAAN,EAAW,MAAX,EAAe,YAAf,EAAP;AACH;;AAEM,SAAS,wBAAT,CAAkC,EAAlC,EAAsC;AACzC,WAAO,yBAAyB,2BAA2B,EAA3B,CAAzB,CAAP;AACH;;AAGD;;;;;AAKO,SAAS,UAAT,CAAoB,KAApB,EAA2B;AAC9B,QAAI,KAAJ,EAAW;AACP,eAAO,0BAAO,KAAP,EAAc,iBAAO,KAArB,CAAP;AACH;AACD,WAAO,IAAP;AACH","file":"utils/token.js","sourcesContent":["/**\n * Created by Bell on 16/8/26.\n */\n\nimport jwt from 'jsonwebtoken';\nimport config from '../config';\nimport {verify} from 'jsonwebtoken';\n\nexport function generateTokenFromPayload(payload) {\n    return jwt.sign(payload, config.token);\n}\n\nexport function generatePayload(id) {\n    const iat = Date.now();\n    const exp = iat + 30 * 24 * 60 * 60 * 1000;\n    const scope = 'default';\n    return {iat, exp, id, scope};\n}\n\nexport function generateToken(id) {\n    return generateTokenFromPayload(generatePayload(id));\n}\n\nexport function generateCheckPatchPayload(id) {\n    const iat = Date.now();\n    const scope = 'patch:check';\n    return {iat, id, scope};\n}\n\nexport function generateCheckPatchToken(id) {\n    return generateTokenFromPayload(generateCheckPatchPayload(id));\n}\n\nexport function generateSetPasswordPayload(id) {\n    const iat = Date.now();\n    const exp = iat + 24 * 60 * 60 * 1000;\n    const scope = 'all';\n    return {iat, exp, id, scope};\n}\n\nexport function generateSetPasswordToken(id) {\n    return generateTokenFromPayload(generateSetPasswordPayload(id));\n}\n\n\n/**\n * get payload from token\n * @param token\n * @returns {*}\n */\nexport function getPayload(token) {\n    if (token) {\n        return verify(token, config.token);\n    }\n    return null;\n}\n"],"sourceRoot":"/source/"}