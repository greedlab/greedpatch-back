{"version":3,"sources":["utils/encrypt.js"],"names":[],"mappings":";;;;;;;;;;;AAUA;;;;;;;8DAMO,iBAA0B,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACU,UAAU,MAAV,EAAkB,EAAlB,CADV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAe,U;;;;;AAItB;;;;;;;;;;+DAOO,kBAAiC,MAAjC,EAAyC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACU,aAAa,MAAb,EAAqB,YAArB,CADV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAe,iB;;;;;AAvBtB;;;;;;AAJA;;;;AAOA,IAAM,YAAY,mBAAQ,SAAR,CAAkB,iBAAO,IAAzB,CAAlB;AACA,IAAM,eAAe,mBAAQ,SAAR,CAAkB,iBAAO,OAAzB,CAArB","file":"utils/encrypt.js","sourcesContent":["/**\n * Created by Bell on 16/8/25.\n */\n\nimport bcrypt from 'bcrypt';\nimport Promise from 'bluebird';\n\nconst hashAsync = Promise.promisify(bcrypt.hash);\nconst compareAsync = Promise.promisify(bcrypt.compare);\n\n/**\n * get hashed string\n *\n * @param string\n * @returns hashed string\n */\nexport async function hashString(string) {\n    return await hashAsync(string, 10);\n}\n\n/**\n * compare string with hashed string\n *\n * @param string\n * @param hashedString\n * @returns {*}\n */\nexport async function compareHashString(string, hashedString) {\n    return await compareAsync(string, hashedString);\n}\n"],"sourceRoot":"/source/"}