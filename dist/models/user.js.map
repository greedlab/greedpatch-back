{"version":3,"sources":["models/user.js"],"names":[],"mappings":";;;;;;;;AAIA;;;;AACA;;;;AACA;;;;AAEA;;;;AARA;;;;AAUA,mBAAS,OAAT,GAAmB,OAAO,OAA1B;;AAEA,IAAM,OAAO,IAAI,mBAAS,MAAb,CAAoB;AAC7B,WAAO,EAAC,MAAM,MAAP,EAAe,UAAU,IAAzB,EAA+B,QAAQ,IAAvC,EADsB;AAE7B,cAAU,EAAC,MAAM,MAAP,EAAe,UAAU,IAAzB,EAFmB;AAG7B,YAAQ,EAAC,MAAM,MAAP,EAAe,SAAS,CAAxB,EAHqB;AAI7B,UAAM,EAAC,MAAM,MAAP,EAAe,SAAS,CAAxB;AAJuB,CAApB,CAAb;;AAOA,KAAK,GAAL,CAAS,MAAT;AAAA,gEAAiB,iBAAuB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AACP,4BADO,GACA,IADA;;AAAA,4BAGR,KAAK,UAAL,CAAgB,UAAhB,CAHQ;AAAA;AAAA;AAAA;;AAAA,yDAIF,MAJE;;AAAA;AAAA;AAAA;AAAA,+BAOU,wBAAa,KAAK,QAAlB,CAPV;;AAAA;AAOH,4BAPG;;AAQT,6BAAK,QAAL,GAAgB,IAAhB;AARS,yDASF,MATE;;AAAA;AAAA;AAAA;AAAA,yDAWF,iBAXE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAAA,aAAgC,OAAhC;AAAA;AAAA;;AAAA,WAAgC,OAAhC;AAAA;;AAeA,KAAK,OAAL,CAAa,gBAAb;AAAA,iEAAgC,kBAAgC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AACtB,4BADsB,GACf,IADe;AAAA,0DAErB,6BAAkB,QAAlB,EAA4B,KAAK,QAAjC,CAFqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhC;;AAAA,aAA+C,gBAA/C;AAAA;AAAA;;AAAA,WAA+C,gBAA/C;AAAA;;AAKA,KAAK,OAAL,CAAa,aAAb,GAA6B,SAAS,aAAT,GAAyB;AAClD,QAAM,OAAO,IAAb;AACA,QAAM,MAAM,KAAK,GAAL,EAAZ;AACA,QAAM,MAAM,MAAM,KAAK,EAAL,GAAU,EAAV,GAAe,EAAf,GAAoB,IAAtC;AACA,QAAM,QAAQ,SAAd;AACA,WAAO,uBAAI,IAAJ,CAAS,EAAC,QAAD,EAAM,QAAN,EAAW,IAAI,KAAK,EAApB,EAAwB,YAAxB,EAAT,EAAyC,iBAAO,KAAhD,CAAP;AACH,CAND;;AAQA,KAAK,OAAL,CAAa,uBAAb,GAAuC,SAAS,uBAAT,GAAmC;AACtE,QAAM,OAAO,IAAb;AACA,QAAM,MAAM,KAAK,GAAL,EAAZ;AACA,QAAM,QAAQ,aAAd;AACA,WAAO,uBAAI,IAAJ,CAAS,EAAC,QAAD,EAAM,IAAI,KAAK,EAAf,EAAmB,YAAnB,EAAT,EAAoC,iBAAO,KAA3C,CAAP;AACH,CALD;;AAOA,KAAK,OAAL,CAAa,wBAAb,GAAwC,SAAS,wBAAT,GAAoC;AACxE,QAAM,OAAO,IAAb;AACA,QAAM,MAAM,KAAK,GAAL,EAAZ;AACA,QAAM,MAAM,MAAM,KAAK,EAAL,GAAU,EAAV,GAAe,IAAjC;AACA,QAAM,QAAQ,KAAd;AACA,WAAO,uBAAI,IAAJ,CAAS,EAAC,QAAD,EAAM,QAAN,EAAW,IAAI,KAAK,EAApB,EAAwB,YAAxB,EAAT,EAAyC,iBAAO,KAAhD,CAAP;AACH,CAND;;kBAQe,mBAAS,KAAT,CAAe,MAAf,EAAuB,IAAvB,C","file":"models/user.js","sourcesContent":["/**\n * Created by Bell on 16/8/10.\n */\n\nimport mongoose from 'mongoose';\nimport config from '../config';\nimport jwt from 'jsonwebtoken';\n\nimport { hashPassword,compareHashString } from '../utils/auth';\n\nmongoose.Promise = global.Promise;\n\nconst User = new mongoose.Schema({\n    email: {type: String, required: true, unique: true},\n    password: {type: String, required: true},\n    status: {type: Number, default: 0},\n    role: {type: Number, default: 0}\n});\n\nUser.pre('save', async function preSave(next) {\n    const user = this;\n\n    if (!user.isModified('password')) {\n        return next();\n    }\n    try {\n        const hash = await hashPassword(user.password);\n        user.password = hash;\n        return next();\n    } catch (err) {\n        return next(err);\n    }\n});\n\nUser.methods.validatePassword = async function validatePassword(password) {\n    const user = this;\n    return compareHashString(password, user.password);\n};\n\nUser.methods.generateToken = function generateToken() {\n    const user = this;\n    const iat = Date.now();\n    const exp = iat + 30 * 24 * 60 * 60 * 1000;\n    const scope = 'default';\n    return jwt.sign({iat, exp, id: user.id, scope}, config.token);\n};\n\nUser.methods.generateCheckPatchToken = function generateCheckPatchToken() {\n    const user = this;\n    const iat = Date.now();\n    const scope = 'patch:check';\n    return jwt.sign({iat, id: user.id, scope}, config.token);\n};\n\nUser.methods.generateSetPasswordToken = function generateSetPasswordToken() {\n    const user = this;\n    const iat = Date.now();\n    const exp = iat + 24 * 60 * 60 * 1000;\n    const scope = 'all';\n    return jwt.sign({iat, exp, id: user.id, scope}, config.token);\n};\n\nexport default mongoose.model('user', User);\n"],"sourceRoot":"/source/"}