{"version":3,"sources":["models/project.js"],"names":[],"mappings":";;;;;;AAIA;;;;;;AACA,mBAAS,OAAT,GAAmB,OAAO,OAA1B,C,CALA;;;;AAOA,IAAM,UAAU,IAAI,mBAAS,MAAb,CAAoB;AAChC,eAAW,EAAC,MAAM,MAAP,EADqB;AAEhC,UAAM,EAAC,MAAM,MAAP,EAAe,UAAU,IAAzB,EAF0B;AAGhC,kBAAc,EAAC,MAAM,MAAP,EAHkB;AAIhC,YAAQ,EAAC,MAAM,MAAP,EAAe,SAAS,CAAxB,EAJwB;AAKhC,aAAS,EAAC,MAAM,KAAP;AALuB,CAApB,CAAhB;;AAQA,QAAQ,OAAR,CAAgB,SAAhB,GAA4B,SAAS,SAAT,CAAmB,MAAnB,EAA2B;AACnD,QAAM,OAAO,IAAb;AACA,QAAM,UAAU,KAAK,OAArB;AACA,QAAI,SAAS,KAAb;AACA,QAAI,CAAC,OAAL,EAAc;AACV,eAAO,MAAP;AACH;AANkD;AAAA;AAAA;;AAAA;AAOnD,6BAAmB,OAAnB,8HAA4B;AAAA,gBAAnB,MAAmB;;AACxB,gBAAI,CAAC,MAAD,IAAW,OAAO,EAAlB,IAAwB,OAAO,EAAP,KAAc,MAAtC,IAAgD,OAAO,IAAP,IAAe,CAAnE,EAAsE;AAClE,yBAAS,IAAT;AACH;AACJ;AAXkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYnD,WAAO,MAAP;AACH,CAbD;;AAeA,QAAQ,OAAR,CAAgB,QAAhB,GAA2B,SAAS,QAAT,CAAkB,MAAlB,EAA0B;AACjD,QAAM,OAAO,IAAb;AACA,QAAM,UAAU,KAAK,OAArB;AACA,QAAI,SAAS,KAAb;AACA,QAAI,CAAC,OAAL,EAAc;AACV,eAAO,MAAP;AACH;AANgD;AAAA;AAAA;;AAAA;AAOjD,8BAAmB,OAAnB,mIAA4B;AAAA,gBAAnB,MAAmB;;AACxB,gBAAI,CAAC,MAAD,IAAW,OAAO,EAAP,KAAc,MAA7B,EAAqC;AACjC,yBAAS,IAAT;AACH;AACJ;AAXgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYjD,WAAO,MAAP;AACH,CAbD;;AAeA,QAAQ,OAAR,CAAgB,OAAhB,GAA0B,SAAS,OAAT,CAAiB,MAAjB,EAAyB;AAC/C,QAAM,OAAO,IAAb;AACA,QAAM,UAAU,KAAK,OAArB;AACA,QAAI,QAAQ,CAAC,CAAb;AACA,QAAI,CAAC,OAAL,EAAc;AACV,eAAO,KAAP;AACH;AACD,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,QAAQ,MAA5B,EAAoC,GAApC,EAAyC;AACrC,YAAI,SAAS,CAAC,CAAV,IAAe,QAAQ,CAAR,EAAW,EAAX,KAAkB,MAArC,EAA6C;AACzC,oBAAQ,CAAR;AACH;AACJ;AACD,WAAO,KAAP;AACH,CAbD;;kBAee,mBAAS,KAAT,CAAe,SAAf,EAA0B,OAA1B,C","file":"models/project.js","sourcesContent":["/**\n * Created by Bell on 16/8/25.\n */\n\nimport mongoose from 'mongoose';\nmongoose.Promise = global.Promise;\n\nconst Project = new mongoose.Schema({\n    bundle_id: {type: String},\n    name: {type: String, required: true},\n    introduction: {type: String},\n    status: {type: Number, default: 0},\n    members: {type: Array}\n});\n\nProject.methods.isManager = function isManager(userid) {\n    const user = this;\n    const members = user.members;\n    let result = false;\n    if (!members) {\n        return result;\n    }\n    for (let member of members) {\n        if (!result && member.id && member.id === userid && member.role == 1) {\n            result = true;\n        }\n    }\n    return result;\n};\n\nProject.methods.isMember = function isMember(userid) {\n    const user = this;\n    const members = user.members;\n    let result = false;\n    if (!members) {\n        return result;\n    }\n    for (let member of members) {\n        if (!result && member.id === userid) {\n            result = true;\n        }\n    }\n    return result;\n};\n\nProject.methods.indexOf = function indexOf(userid) {\n    const user = this;\n    const members = user.members;\n    let index = -1;\n    if (!members) {\n        return index;\n    }\n    for (let i = 0; i < members.length; i++) {\n        if (index == -1 && members[i].id === userid) {\n            index = i;\n        }\n    }\n    return index;\n};\n\nexport default mongoose.model('project', Project);\n"],"sourceRoot":"/source/"}