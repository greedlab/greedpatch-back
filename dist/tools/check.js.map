{"version":3,"sources":["tools/check.js"],"names":[],"mappings":";;;;;QAMgB,e,GAAA,e;QAkBA,e,GAAA,e;QAkBA,kB,GAAA,kB;QAkBA,kB,GAAA,kB;QAkBA,qB,GAAA,qB;QAkBA,kB,GAAA,kB;QAkBA,qB,GAAA,qB;;AA9GhB;;IAAY,K;;;;AAEL,SAAS,eAAT,CAAyB,GAAzB,EAA8B,KAA9B,EAAqC;AACxC,QAAI,CAAC,KAAL,EAAY;AACR,YAAI,MAAJ,GAAa,GAAb;AACA,YAAI,IAAJ,GAAW;AACP,qBAAS,gBADF;AAEP,oBAAQ,CACJ;AACI,4BAAY,MADhB;AAEI,yBAAS,OAFb;AAGI,wBAAQ;AAHZ,aADI;AAFD,SAAX;AAUA,eAAO,KAAP;AACH;AACD,WAAO,IAAP;AACH,C,CAtBD;;;;AAwBO,SAAS,eAAT,CAAyB,GAAzB,EAA8B,KAA9B,EAAqC;AACxC,QAAI,CAAC,MAAM,UAAN,CAAiB,KAAjB,CAAL,EAA8B;AAC1B,YAAI,MAAJ,GAAa,GAAb;AACA,YAAI,IAAJ,GAAW;AACP,qBAAS,eADF;AAEP,oBAAQ,CACJ;AACI,0BAAU,MADd;AAEI,uBAAO,OAFX;AAGI,sBAAM;AAHV,aADI;AAFD,SAAX;AAUA,eAAO,KAAP;AACH;AACD,WAAO,IAAP;AACH;;AAEM,SAAS,kBAAT,CAA4B,GAA5B,EAAiC,QAAjC,EAA2C;AAC9C,QAAI,CAAC,QAAL,EAAe;AACX,YAAI,MAAJ,GAAa,GAAb;AACA,YAAI,IAAJ,GAAW;AACP,qBAAS,mBADF;AAEP,oBAAQ,CACJ;AACI,4BAAY,MADhB;AAEI,yBAAS,UAFb;AAGI,wBAAQ;AAHZ,aADI;AAFD,SAAX;AAUA,eAAO,KAAP;AACH;AACD,WAAO,IAAP;AACH;;AAEM,SAAS,kBAAT,CAA4B,GAA5B,EAAiC,QAAjC,EAA2C;AAC9C,QAAI,CAAC,MAAM,aAAN,CAAoB,QAApB,CAAL,EAAoC;AAChC,YAAI,MAAJ,GAAa,GAAb;AACA,YAAI,IAAJ,GAAW;AACP,qBAAS,kBADF;AAEP,oBAAQ,CACJ;AACI,0BAAU,MADd;AAEI,uBAAO,UAFX;AAGI,sBAAM;AAHV,aADI;AAFD,SAAX;AAUA,eAAO,KAAP;AACH;AACD,WAAO,IAAP;AACH;;AAEM,SAAS,qBAAT,CAA+B,GAA/B,EAAoC,KAApC,EAA2C;AAC9C,QAAI,CAAC,KAAL,EAAY;AACR,YAAI,MAAJ,GAAa,GAAb;AACA,YAAI,IAAJ,GAAW;AACP,qBAAS,gBADF;AAEP,oBAAQ,CACJ;AACI,4BAAY,aADhB;AAEI,yBAAS,IAFb;AAGI,wBAAQ;AAHZ,aADI;AAFD,SAAX;AAUA,eAAO,KAAP;AACH;AACD,WAAO,IAAP;AACH;;AAEM,SAAS,kBAAT,CAA4B,GAA5B,EAAiC,SAAjC,EAA4C;AAC/C,QAAI,CAAC,SAAL,EAAgB;AACZ,YAAI,MAAJ,GAAa,GAAb;AACA,YAAI,IAAJ,GAAW;AACP,qBAAS,oBADF;AAEP,oBAAQ,CACJ;AACI,4BAAY,SADhB;AAEI,yBAAS,WAFb;AAGI,wBAAQ;AAHZ,aADI;AAFD,SAAX;AAUA,eAAO,KAAP;AACH;AACD,WAAO,IAAP;AACH;;AAEM,SAAS,qBAAT,CAA+B,GAA/B,EAAoC,IAApC,EAA0C;AAC7C,QAAI,CAAC,IAAL,EAAW;AACP,YAAI,MAAJ,GAAa,GAAb;AACA,YAAI,IAAJ,GAAW;AACP,qBAAS,eADF;AAEP,oBAAQ,CACJ;AACI,4BAAY,SADhB;AAEI,yBAAS,MAFb;AAGI,wBAAQ;AAHZ,aADI;AAFD,SAAX;AAUA,eAAO,KAAP;AACH;AACD,WAAO,IAAP;AACH","file":"tools/check.js","sourcesContent":["/**\n * Created by Bell on 16/8/30.\n */\n\nimport * as regex from '../utils/regex';\n\nexport function checkEmptyEmail(ctx, email) {\n    if (!email) {\n        ctx.status = 422;\n        ctx.body = {\n            message: 'email is empty',\n            errors: [\n                {\n                    'resource': 'User',\n                    'field': 'email',\n                    'code': 'missing_field'\n                }\n            ]\n        };\n        return false;\n    }\n    return true;\n}\n\nexport function checkValidEmail(ctx, email) {\n    if (!regex.validEmail(email)) {\n        ctx.status = 422;\n        ctx.body = {\n            message: 'Invalid email',\n            errors: [\n                {\n                    resource: 'User',\n                    field: 'email',\n                    code: 'invalid'\n                }\n            ]\n        };\n        return false;\n    }\n    return true;\n}\n\nexport function checkEmptyPassword(ctx, password) {\n    if (!password) {\n        ctx.status = 422;\n        ctx.body = {\n            message: 'password is empty',\n            errors: [\n                {\n                    'resource': 'User',\n                    'field': 'password',\n                    'code': 'missing_field'\n                }\n            ]\n        };\n        return false;\n    }\n    return true;\n}\n\nexport function checkValidPassword(ctx, password) {\n    if (!regex.validPassword(password)) {\n        ctx.status = 422;\n        ctx.body = {\n            message: 'Invalid password',\n            errors: [\n                {\n                    resource: 'User',\n                    field: 'password',\n                    code: 'invalid'\n                }\n            ]\n        };\n        return false;\n    }\n    return true;\n}\n\nexport function checkEmptySetPwdToken(ctx, token) {\n    if (!token) {\n        ctx.status = 422;\n        ctx.body = {\n            message: 'token is empty',\n            errors: [\n                {\n                    'resource': 'SetPwdToken',\n                    'field': 'id',\n                    'code': 'missing_field'\n                }\n            ]\n        };\n        return false;\n    }\n    return true;\n}\n\nexport function checkEmptyBundleId(ctx, bundle_id) {\n    if (!bundle_id) {\n        ctx.status = 422;\n        ctx.body = {\n            message: 'bundle_id is empty',\n            errors: [\n                {\n                    'resource': 'Project',\n                    'field': 'bundle_id',\n                    'code': 'missing_field'\n                }\n            ]\n        };\n        return false;\n    }\n    return true;\n}\n\nexport function checkEmptyProjectName(ctx, name) {\n    if (!name) {\n        ctx.status = 422;\n        ctx.body = {\n            message: 'name is empty',\n            errors: [\n                {\n                    'resource': 'Project',\n                    'field': 'name',\n                    'code': 'missing_field'\n                }\n            ]\n        };\n        return false;\n    }\n    return true;\n}\n"],"sourceRoot":"/source/"}